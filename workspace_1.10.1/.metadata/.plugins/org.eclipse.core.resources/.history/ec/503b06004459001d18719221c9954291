#include "stm32f1xx_hal.h"
#include "main.h"
#include "stdio.h"
#include "stm32f1xx_hal_def.h"

#include "fonts.h"
#include "ssd1306.h"

#define DHT11_PORT GPIOA
#define DHT11_PIN GPIO_PIN_8

class LcdOledModule {
public:

	void SetText(char *str, FontDef_t *Fonts, int X, int Y, int ColorIndex);
	void Clear ();

	void On(){
		SSD1306_ON();
	}
	void Off();

	uint8_t RHI, RHD, TCI, TCD, SUM;
	uint32_t pMillis, cMillis;
	float tCelsius = 0;
	float tFahrenheit = 0;
	float RH = 0;
	uint8_t TFI = 0;
	uint8_t TFD = 0;
	int IndexMune = 0;
	char strCopy[15];
	const int LowestTemperature = 28;

	void LcdOledModule() {
		HAL_TIM_Base_Start (&htim1);
		SSD1306_Init();
	}

	uint8_t DHT11_Start(void) {
		uint8_t Response = 0;
		GPIO_InitTypeDef GPIO_InitStructPrivate = { 0 };
		GPIO_InitStructPrivate.Pin = DHT11_PIN;
		GPIO_InitStructPrivate.Mode = GPIO_MODE_OUTPUT_PP;
		GPIO_InitStructPrivate.Speed = GPIO_SPEED_FREQ_LOW;
		GPIO_InitStructPrivate.Pull = GPIO_NOPULL;
		HAL_GPIO_Init(DHT11_PORT, &GPIO_InitStructPrivate); // set the pin as output
		HAL_GPIO_WritePin(DHT11_PORT, DHT11_PIN, GPIO_PIN_RESET); // pull the pin low
		HAL_Delay(20);   // wait for 20ms
		HAL_GPIO_WritePin(DHT11_PORT, DHT11_PIN, GPIO_PIN_SET); // pull the pin high
		microDelay(30);   // wait for 30us
		GPIO_InitStructPrivate.Mode = GPIO_MODE_INPUT;
		GPIO_InitStructPrivate.Pull = GPIO_PULLUP;
		HAL_GPIO_Init(DHT11_PORT, &GPIO_InitStructPrivate); // set the pin as input
		microDelay(40);
		if (!(HAL_GPIO_ReadPin(DHT11_PORT, DHT11_PIN))) {
			microDelay(80);
			if ((HAL_GPIO_ReadPin(DHT11_PORT, DHT11_PIN)))
				Response = 1;
		}
		pMillis = HAL_GetTick();
		cMillis = HAL_GetTick();
		while ((HAL_GPIO_ReadPin(DHT11_PORT, DHT11_PIN))
				&& pMillis + 2 > cMillis) {
			cMillis = HAL_GetTick();
		}
		return Response;
	}

	uint8_t DHT11_Read(void) {
		uint8_t a, b;
		for (a = 0; a < 8; a++) {
			pMillis = HAL_GetTick();
			cMillis = HAL_GetTick();
			while (!(HAL_GPIO_ReadPin(DHT11_PORT, DHT11_PIN))
					&& pMillis + 2 > cMillis) {  // wait for the pin to go high
				cMillis = HAL_GetTick();
			}
			microDelay(40);   // wait for 40 us
			if (!(HAL_GPIO_ReadPin(DHT11_PORT, DHT11_PIN))) // if the pin is low
				b &= ~(1 << (7 - a));
			else
				b |= (1 << (7 - a));
			pMillis = HAL_GetTick();
			cMillis = HAL_GetTick();
			while ((HAL_GPIO_ReadPin(DHT11_PORT, DHT11_PIN))
					&& pMillis + 2 > cMillis) {  // wait for the pin to go low
				cMillis = HAL_GetTick();
			}
		}
		return b;
	}

};

